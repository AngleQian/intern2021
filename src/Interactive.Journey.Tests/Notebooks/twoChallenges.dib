#!csharp

#r "nuget: Interactive.Journey, *-*"
var lessonSetupVarInTheFirstCell = 333;

#!csharp

using Interactive.Journey;

#!csharp

var lessonSetupVar = 666;

#!markdown

# [Challenge] LinkedList

#!csharp

Lesson.ResetChallenge();
Lesson.CurrentChallenge.AddRule("failrule", context => context.Fail("reasons"));
Lesson.CurrentChallenge.AddRule("passrule", context => context.Pass("reasons"));

#!csharp

Lesson.CurrentChallenge.OnCodeSubmittedAsync(async context => 
    {
        context.SetMessage("Good job");
        await context.StartNextChallengeAsync();
    });

#!markdown

## [ChallengeSetup]

#!csharp

var challengeSetupVar = 3;

#!markdown

## [Question]

#!markdown

This is the LinkedList question.

#!csharp

// write your answer to LinkedList below

#!markdown

## [Scratchpad]

#!csharp

// random scratchpad stuff

#!markdown

# [Challenge] DFS

#!csharp

Lesson.ResetChallenge();
Lesson.CurrentChallenge.AddRule("dfsrule1", context => context.Fail("dfsfailreasons"));
Lesson.CurrentChallenge.AddRule("dfsrule2", context => context.Pass("dfspassreasons"));

#!csharp

Lesson.CurrentChallenge.OnCodeSubmittedAsync(async context => 
    {
        context.SetMessage("Good job for DFS");
        await context.StartChallengeAsync("LinkedList");
    });

#!markdown

## [ChallengeSetup]

#!csharp

var anotherChallengeSetupVar = 10;

#!markdown

## [Scratchpad]

#!csharp

// random scratchpad

#!markdown

## [Question]

#!csharp

// write your answer to DFS below

#!markdown

This is the DFS question.
